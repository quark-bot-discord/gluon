[
    {
        "comment": "/**\n * Represents a guild member.\n * @see {@link https://discord.com/developers/docs/resources/guild#guild-member-object-guild-member-structure}\n */",
        "meta": {
            "range": [
                910,
                23236
            ],
            "filename": "Member.js",
            "lineno": 24,
            "columnno": 0,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000060",
                "name": "Member",
                "type": "ClassDeclaration",
                "paramnames": [
                    "client",
                    "data",
                    ""
                ]
            }
        },
        "classdesc": "Represents a guild member.",
        "see": [
            "{@link https://discord.com/developers/docs/resources/guild#guild-member-object-guild-member-structure}"
        ],
        "name": "Member",
        "longname": "Member",
        "kind": "class",
        "scope": "global",
        "undocumented": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                927,
                936
            ],
            "filename": "Member.js",
            "lineno": 25,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000063",
                "name": "_client",
                "type": "ClassPrivateProperty"
            }
        },
        "undocumented": true,
        "name": "_client",
        "longname": "Member#_client",
        "kind": "member",
        "memberof": "Member",
        "scope": "instance",
        "access": "private"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                939,
                950
            ],
            "filename": "Member.js",
            "lineno": 26,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000064",
                "name": "_guild_id",
                "type": "ClassPrivateProperty"
            }
        },
        "undocumented": true,
        "name": "_guild_id",
        "longname": "Member#_guild_id",
        "kind": "member",
        "memberof": "Member",
        "scope": "instance",
        "access": "private"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                953,
                958
            ],
            "filename": "Member.js",
            "lineno": 27,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000065",
                "name": "_id",
                "type": "ClassPrivateProperty"
            }
        },
        "undocumented": true,
        "name": "_id",
        "longname": "Member#_id",
        "kind": "member",
        "memberof": "Member",
        "scope": "instance",
        "access": "private"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                961,
                967
            ],
            "filename": "Member.js",
            "lineno": 28,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000066",
                "name": "nick",
                "type": "ClassPrivateProperty"
            }
        },
        "undocumented": true,
        "name": "nick",
        "longname": "Member#nick",
        "kind": "member",
        "memberof": "Member",
        "scope": "instance",
        "access": "private"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                970,
                981
            ],
            "filename": "Member.js",
            "lineno": 29,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000067",
                "name": "joined_at",
                "type": "ClassPrivateProperty"
            }
        },
        "undocumented": true,
        "name": "joined_at",
        "longname": "Member#joined_at",
        "kind": "member",
        "memberof": "Member",
        "scope": "instance",
        "access": "private"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                984,
                1014
            ],
            "filename": "Member.js",
            "lineno": 30,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000068",
                "name": "communication_disabled_until",
                "type": "ClassPrivateProperty"
            }
        },
        "undocumented": true,
        "name": "communication_disabled_until",
        "longname": "Member#communication_disabled_until",
        "kind": "member",
        "memberof": "Member",
        "scope": "instance",
        "access": "private"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1017,
                1024
            ],
            "filename": "Member.js",
            "lineno": 31,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000069",
                "name": "flags",
                "type": "ClassPrivateProperty"
            }
        },
        "undocumented": true,
        "name": "flags",
        "longname": "Member#flags",
        "kind": "member",
        "memberof": "Member",
        "scope": "instance",
        "access": "private"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1027,
                1040
            ],
            "filename": "Member.js",
            "lineno": 32,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000070",
                "name": "_attributes",
                "type": "ClassPrivateProperty"
            }
        },
        "undocumented": true,
        "name": "_attributes",
        "longname": "Member#_attributes",
        "kind": "member",
        "memberof": "Member",
        "scope": "instance",
        "access": "private"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1043,
                1052
            ],
            "filename": "Member.js",
            "lineno": 33,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000071",
                "name": "_avatar",
                "type": "ClassPrivateProperty"
            }
        },
        "undocumented": true,
        "name": "_avatar",
        "longname": "Member#_avatar",
        "kind": "member",
        "memberof": "Member",
        "scope": "instance",
        "access": "private"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1055,
                1063
            ],
            "filename": "Member.js",
            "lineno": 34,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000072",
                "name": "_roles",
                "type": "ClassPrivateProperty"
            }
        },
        "undocumented": true,
        "name": "_roles",
        "longname": "Member#_roles",
        "kind": "member",
        "memberof": "Member",
        "scope": "instance",
        "access": "private"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1066,
                1072
            ],
            "filename": "Member.js",
            "lineno": 35,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000073",
                "name": "user",
                "type": "ClassPrivateProperty"
            }
        },
        "undocumented": true,
        "name": "user",
        "longname": "Member#user",
        "kind": "member",
        "memberof": "Member",
        "scope": "instance",
        "access": "private"
    },
    {
        "comment": "/**\n   * Creates the structure for a guild member.\n   * @param {Client} client The client instance.\n   * @param {Object} data The raw member data from Discord.\n   * @param {Object} options Additional options for the member.\n   * @param {String} options.userId The id of the member.\n   * @param {String} options.guildId The id of the guild that the member belongs to.\n   * @param {User?} options.user A user object for this member.\n   * @param {Boolean?} options.nocache Whether this member should be cached.\n   */",
        "meta": {
            "range": [
                1591,
                5860
            ],
            "filename": "Member.js",
            "lineno": 46,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000074",
                "name": "Member",
                "type": "MethodDefinition",
                "paramnames": [
                    "client",
                    "data",
                    ""
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Creates the structure for a guild member.",
        "params": [
            {
                "type": {
                    "names": [
                        "Client"
                    ]
                },
                "description": "The client instance.",
                "name": "client"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The raw member data from Discord.",
                "name": "data"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Additional options for the member.",
                "name": "options"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "The id of the member.",
                "name": "options.userId"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "The id of the guild that the member belongs to.",
                "name": "options.guildId"
            },
            {
                "type": {
                    "names": [
                        "User"
                    ]
                },
                "nullable": true,
                "description": "A user object for this member.",
                "name": "options.user"
            },
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "nullable": true,
                "description": "Whether this member should be cached.",
                "name": "options.nocache"
            }
        ],
        "name": "Member",
        "longname": "Member",
        "kind": "class",
        "scope": "global",
        "undocumented": true
    },
    {
        "comment": "/**\n * Represents a guild member.\n * @see {@link https://discord.com/developers/docs/resources/guild#guild-member-object-guild-member-structure}\n */",
        "meta": {
            "range": [
                910,
                23236
            ],
            "filename": "Member.js",
            "lineno": 24,
            "columnno": 0,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000060",
                "name": "Member",
                "type": "ClassDeclaration",
                "paramnames": [
                    "client",
                    "data",
                    ""
                ]
            }
        },
        "name": "Member",
        "longname": "Member",
        "kind": "class",
        "classdesc": "Represents a guild member.",
        "see": [
            "{@link https://discord.com/developers/docs/resources/guild#guild-member-object-guild-member-structure}"
        ],
        "scope": "global",
        "description": "Creates the structure for a guild member.",
        "params": [
            {
                "type": {
                    "names": [
                        "Client"
                    ]
                },
                "description": "The client instance.",
                "name": "client"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The raw member data from Discord.",
                "name": "data"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Additional options for the member.",
                "name": "options"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "The id of the member.",
                "name": "options.userId"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "The id of the guild that the member belongs to.",
                "name": "options.guildId"
            },
            {
                "type": {
                    "names": [
                        "User"
                    ]
                },
                "nullable": true,
                "description": "A user object for this member.",
                "name": "options.user"
            },
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "nullable": true,
                "description": "Whether this member should be cached.",
                "name": "options.nocache"
            }
        ]
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1632,
                1638
            ],
            "filename": "Member.js",
            "lineno": 49,
            "columnno": 6,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000081",
                "name": "userId",
                "type": "Identifier",
                "value": "userId"
            }
        },
        "undocumented": true,
        "name": "userId",
        "longname": "userId",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1640,
                1647
            ],
            "filename": "Member.js",
            "lineno": 49,
            "columnno": 14,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000083",
                "name": "guildId",
                "type": "Identifier",
                "value": "guildId"
            }
        },
        "undocumented": true,
        "name": "guildId",
        "longname": "guildId",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1649,
                1653
            ],
            "filename": "Member.js",
            "lineno": 49,
            "columnno": 23,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000085",
                "name": "user",
                "type": "Identifier",
                "value": "user"
            }
        },
        "undocumented": true,
        "name": "user",
        "longname": "user",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1655,
                1670
            ],
            "filename": "Member.js",
            "lineno": 49,
            "columnno": 29,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000087",
                "name": "nocache",
                "type": "AssignmentPattern",
                "value": "nocache"
            }
        },
        "undocumented": true,
        "name": "nocache",
        "longname": "nocache",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1683,
                1697
            ],
            "filename": "Member.js",
            "lineno": 50,
            "columnno": 6,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000092",
                "name": "nocache",
                "type": "Literal",
                "value": false
            }
        },
        "undocumented": true,
        "name": "nocache",
        "longname": "nocache",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n     * The client instance.\n     * @type {Client}\n     * @private\n     */",
        "meta": {
            "range": [
                2429,
                2451
            ],
            "filename": "Member.js",
            "lineno": 71,
            "columnno": 4,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000155",
                "name": "this.",
                "type": "Identifier",
                "value": "client",
                "paramnames": []
            }
        },
        "description": "The client instance.",
        "type": {
            "names": [
                "Client"
            ]
        },
        "access": "private",
        "name": "Member",
        "longname": "Member.Member",
        "kind": "member",
        "memberof": "Member",
        "scope": "static"
    },
    {
        "comment": "/**\n     * The id of the guild that this member belongs to.\n     * @type {BigInt}\n     * @private\n     */",
        "meta": {
            "range": [
                2568,
                2601
            ],
            "filename": "Member.js",
            "lineno": 78,
            "columnno": 4,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000162",
                "name": "this.",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "description": "The id of the guild that this member belongs to.",
        "type": {
            "names": [
                "BigInt"
            ]
        },
        "access": "private",
        "name": "Member",
        "longname": "Member.Member",
        "kind": "member",
        "memberof": "Member",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2614,
                2664
            ],
            "filename": "Member.js",
            "lineno": 80,
            "columnno": 10,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000171",
                "name": "existing",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "existing",
        "longname": "<anonymous>~existing",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n     * The id of the member.\n     * @type {BigInt}\n     * @private\n     */",
        "meta": {
            "range": [
                2754,
                2780
            ],
            "filename": "Member.js",
            "lineno": 87,
            "columnno": 4,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000177",
                "name": "this.",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "description": "The id of the member.",
        "type": {
            "names": [
                "BigInt"
            ]
        },
        "access": "private",
        "name": "Member",
        "longname": "Member.Member",
        "kind": "member",
        "memberof": "Member",
        "scope": "static"
    },
    {
        "comment": "/**\n       * The user object for this member.\n       * @type {User?}\n       * @private\n       */",
        "meta": {
            "range": [
                2911,
                2971
            ],
            "filename": "Member.js",
            "lineno": 95,
            "columnno": 6,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000190",
                "name": "this.",
                "type": "NewExpression",
                "value": "",
                "paramnames": []
            }
        },
        "description": "The user object for this member.",
        "type": {
            "names": [
                "User"
            ]
        },
        "nullable": true,
        "access": "private",
        "name": "Member",
        "longname": "Member.Member",
        "kind": "member",
        "memberof": "Member",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2961,
                2968
            ],
            "filename": "Member.js",
            "lineno": 95,
            "columnno": 56,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000205",
                "name": "nocache",
                "type": "Identifier",
                "value": "nocache"
            }
        },
        "undocumented": true,
        "name": "nocache",
        "longname": "nocache",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3002,
                3028
            ],
            "filename": "Member.js",
            "lineno": 96,
            "columnno": 29,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000210",
                "name": "this.",
                "type": "MemberExpression",
                "value": "existing.user",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "Member",
        "longname": "Member.Member",
        "kind": "member",
        "memberof": "Member",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3049,
                3066
            ],
            "filename": "Member.js",
            "lineno": 97,
            "columnno": 19,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000221",
                "name": "this.",
                "type": "Identifier",
                "value": "user",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "Member",
        "longname": "Member.Member",
        "kind": "member",
        "memberof": "Member",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3077,
                3129
            ],
            "filename": "Member.js",
            "lineno": 98,
            "columnno": 9,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000228",
                "name": "this.",
                "type": "LogicalExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "Member",
        "longname": "Member.Member",
        "kind": "member",
        "memberof": "Member",
        "scope": "static"
    },
    {
        "comment": "/**\n       * The nickname of this member.\n       * @type {String?}\n       * @private\n       */",
        "meta": {
            "range": [
                3272,
                3294
            ],
            "filename": "Member.js",
            "lineno": 106,
            "columnno": 6,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000252",
                "name": "this.",
                "type": "MemberExpression",
                "value": "data.nick",
                "paramnames": []
            }
        },
        "description": "The nickname of this member.",
        "type": {
            "names": [
                "String"
            ]
        },
        "nullable": true,
        "access": "private",
        "name": "Member",
        "longname": "Member.Member",
        "kind": "member",
        "memberof": "Member",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3377,
                3403
            ],
            "filename": "Member.js",
            "lineno": 108,
            "columnno": 6,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000275",
                "name": "this.",
                "type": "MemberExpression",
                "value": "existing.nick",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "Member",
        "longname": "Member.Member",
        "kind": "member",
        "memberof": "Member",
        "scope": "static"
    },
    {
        "comment": "/**\n       * The UNIX timestamp for when this member joined the guild.\n       * @type {Number?}\n       * @private\n       */",
        "meta": {
            "range": [
                3566,
                3631
            ],
            "filename": "Member.js",
            "lineno": 116,
            "columnno": 6,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000288",
                "name": "this.",
                "type": "BinaryExpression",
                "value": "",
                "paramnames": []
            }
        },
        "description": "The UNIX timestamp for when this member joined the guild.",
        "type": {
            "names": [
                "Number"
            ]
        },
        "nullable": true,
        "access": "private",
        "name": "Member",
        "longname": "Member.Member",
        "kind": "member",
        "memberof": "Member",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3666,
                3701
            ],
            "filename": "Member.js",
            "lineno": 117,
            "columnno": 33,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000308",
                "name": "this.",
                "type": "MemberExpression",
                "value": "existing.joinedAt",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "Member",
        "longname": "Member.Member",
        "kind": "member",
        "memberof": "Member",
        "scope": "static"
    },
    {
        "comment": "/**\n     * The UNIX timestamp for when this member's timeout expires, if applicable.\n     * @type {Number?}\n     * @private\n     */",
        "meta": {
            "range": [
                3844,
                4002
            ],
            "filename": "Member.js",
            "lineno": 124,
            "columnno": 4,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000317",
                "name": "this.",
                "type": "ConditionalExpression",
                "value": "",
                "paramnames": []
            }
        },
        "description": "The UNIX timestamp for when this member's timeout expires, if applicable.",
        "type": {
            "names": [
                "Number"
            ]
        },
        "nullable": true,
        "access": "private",
        "name": "Member",
        "longname": "Member.Member",
        "kind": "member",
        "memberof": "Member",
        "scope": "static"
    },
    {
        "comment": "/**\n       * The flags for this user.\n       * @type {Number}\n       * @private\n       * @see {@link https://discord.com/developers/docs/resources/guild#guild-member-object-guild-member-flags}\n       */",
        "meta": {
            "range": [
                4259,
                4283
            ],
            "filename": "Member.js",
            "lineno": 135,
            "columnno": 6,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000347",
                "name": "this.",
                "type": "MemberExpression",
                "value": "data.flags",
                "paramnames": []
            }
        },
        "description": "The flags for this user.",
        "type": {
            "names": [
                "Number"
            ]
        },
        "access": "private",
        "see": [
            "{@link https://discord.com/developers/docs/resources/guild#guild-member-object-guild-member-flags}"
        ],
        "name": "Member",
        "longname": "Member.Member",
        "kind": "member",
        "memberof": "Member",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4351,
                4379
            ],
            "filename": "Member.js",
            "lineno": 137,
            "columnno": 6,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000365",
                "name": "this.",
                "type": "MemberExpression",
                "value": "existing.flags",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "Member",
        "longname": "Member.Member",
        "kind": "member",
        "memberof": "Member",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4390,
                4405
            ],
            "filename": "Member.js",
            "lineno": 138,
            "columnno": 9,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000374",
                "name": "this.",
                "type": "Literal",
                "value": 0,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "Member",
        "longname": "Member.Member",
        "kind": "member",
        "memberof": "Member",
        "scope": "static"
    },
    {
        "comment": "/**\n     * The attributes for this member.\n     * @type {Number}\n     * @private\n     */",
        "meta": {
            "range": [
                4505,
                4546
            ],
            "filename": "Member.js",
            "lineno": 145,
            "columnno": 4,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000381",
                "name": "this.",
                "type": "LogicalExpression",
                "value": "",
                "paramnames": []
            }
        },
        "description": "The attributes for this member.",
        "type": {
            "names": [
                "Number"
            ]
        },
        "access": "private",
        "name": "Member",
        "longname": "Member.Member",
        "kind": "member",
        "memberof": "Member",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4615,
                4644
            ],
            "filename": "Member.js",
            "lineno": 148,
            "columnno": 6,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000404",
                "name": "this.",
                "type": "BinaryExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "Member",
        "longname": "Member.Member",
        "kind": "member",
        "memberof": "Member",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4733,
                4762
            ],
            "filename": "Member.js",
            "lineno": 150,
            "columnno": 6,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000427",
                "name": "this.",
                "type": "BinaryExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "Member",
        "longname": "Member.Member",
        "kind": "member",
        "memberof": "Member",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4832,
                4861
            ],
            "filename": "Member.js",
            "lineno": 153,
            "columnno": 6,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000450",
                "name": "this.",
                "type": "BinaryExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "Member",
        "longname": "Member.Member",
        "kind": "member",
        "memberof": "Member",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5000,
                5097
            ],
            "filename": "Member.js",
            "lineno": 161,
            "columnno": 6,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000465",
                "name": "this.",
                "type": "ConditionalExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "Member",
        "longname": "Member.Member",
        "kind": "member",
        "memberof": "Member",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5177,
                5209
            ],
            "filename": "Member.js",
            "lineno": 165,
            "columnno": 6,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000501",
                "name": "this.",
                "type": "MemberExpression",
                "value": "existing._avatar",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "Member",
        "longname": "Member.Member",
        "kind": "member",
        "memberof": "Member",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5449,
                5466
            ],
            "filename": "Member.js",
            "lineno": 177,
            "columnno": 6,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000535",
                "name": "this.",
                "type": "ArrayExpression",
                "value": "[]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "Member",
        "longname": "Member.Member",
        "kind": "member",
        "memberof": "Member",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5483,
                5488
            ],
            "filename": "Member.js",
            "lineno": 178,
            "columnno": 15,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000543",
                "name": "i",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "<anonymous>~i",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n   * The id of the member.\n   * @type {String}\n   * @readonly\n   * @public\n   */",
        "meta": {
            "range": [
                5951,
                5995
            ],
            "filename": "Member.js",
            "lineno": 200,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000623",
                "name": "Member#id",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "The id of the member.",
        "type": {
            "names": [
                "String"
            ]
        },
        "readonly": true,
        "access": "public",
        "name": "id",
        "longname": "Member#id",
        "kind": "member",
        "memberof": "Member",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n   * The id of the guild that this member belongs to.\n   * @type {String}\n   * @readonly\n   * @public\n   */",
        "meta": {
            "range": [
                6113,
                6168
            ],
            "filename": "Member.js",
            "lineno": 210,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000634",
                "name": "Member#guildId",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "The id of the guild that this member belongs to.",
        "type": {
            "names": [
                "String"
            ]
        },
        "readonly": true,
        "access": "public",
        "name": "guildId",
        "longname": "Member#guildId",
        "kind": "member",
        "memberof": "Member",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n   * The guild that this member belongs to.\n   * @type {Guild?}\n   * @readonly\n   * @public\n   */",
        "meta": {
            "range": [
                6276,
                6352
            ],
            "filename": "Member.js",
            "lineno": 220,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000645",
                "name": "Member#guild",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "The guild that this member belongs to.",
        "type": {
            "names": [
                "Guild"
            ]
        },
        "nullable": true,
        "readonly": true,
        "access": "public",
        "name": "guild",
        "longname": "Member#guild",
        "kind": "member",
        "memberof": "Member",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n   * The nickname of the member.\n   * @type {String?}\n   * @readonly\n   * @public\n   */",
        "meta": {
            "range": [
                6450,
                6489
            ],
            "filename": "Member.js",
            "lineno": 230,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000664",
                "name": "Member#nick",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "The nickname of the member.",
        "type": {
            "names": [
                "String"
            ]
        },
        "nullable": true,
        "readonly": true,
        "access": "public",
        "name": "nick",
        "longname": "Member#nick",
        "kind": "member",
        "memberof": "Member",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n   * The UNIX timestamp for when this member joined the guild.\n   * @type {Number?}\n   * @readonly\n   * @public\n   */",
        "meta": {
            "range": [
                6617,
                6665
            ],
            "filename": "Member.js",
            "lineno": 240,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000673",
                "name": "Member#joinedAt",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "The UNIX timestamp for when this member joined the guild.",
        "type": {
            "names": [
                "Number"
            ]
        },
        "nullable": true,
        "readonly": true,
        "access": "public",
        "name": "joinedAt",
        "longname": "Member#joinedAt",
        "kind": "member",
        "memberof": "Member",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n   * The UNIX timestamp for when this member's timeout expires, if applicable.\n   * @type {Number?}\n   * @readonly\n   * @public\n   */",
        "meta": {
            "range": [
                6809,
                6880
            ],
            "filename": "Member.js",
            "lineno": 250,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000682",
                "name": "Member#timeoutUntil",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "The UNIX timestamp for when this member's timeout expires, if applicable.",
        "type": {
            "names": [
                "Number"
            ]
        },
        "nullable": true,
        "readonly": true,
        "access": "public",
        "name": "timeoutUntil",
        "longname": "Member#timeoutUntil",
        "kind": "member",
        "memberof": "Member",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n   * The flags for this user.\n   * @type {Number}\n   * @readonly\n   * @public\n   */",
        "meta": {
            "range": [
                6974,
                7015
            ],
            "filename": "Member.js",
            "lineno": 260,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000691",
                "name": "Member#flags",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "The flags for this user.",
        "type": {
            "names": [
                "Number"
            ]
        },
        "readonly": true,
        "access": "public",
        "name": "flags",
        "longname": "Member#flags",
        "kind": "member",
        "memberof": "Member",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n   * The member's roles.\n   * @readonly\n   * @type {Array<Role>}\n   * @public\n   */",
        "meta": {
            "range": [
                7109,
                7625
            ],
            "filename": "Member.js",
            "lineno": 270,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000700",
                "name": "Member#roles",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "The member's roles.",
        "readonly": true,
        "type": {
            "names": [
                "Array.<Role>"
            ]
        },
        "access": "public",
        "name": "roles",
        "longname": "Member#roles",
        "kind": "member",
        "memberof": "Member",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7281,
                7291
            ],
            "filename": "Member.js",
            "lineno": 279,
            "columnno": 10,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000725",
                "name": "roles",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "roles",
        "longname": "<anonymous>~roles",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7304,
                7353
            ],
            "filename": "Member.js",
            "lineno": 281,
            "columnno": 10,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000729",
                "name": "everyoneRole",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "everyoneRole",
        "longname": "<anonymous>~everyoneRole",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7455,
                7460
            ],
            "filename": "Member.js",
            "lineno": 286,
            "columnno": 13,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000760",
                "name": "i",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "<anonymous>~i",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7506,
                7561
            ],
            "filename": "Member.js",
            "lineno": 287,
            "columnno": 12,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000775",
                "name": "role",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "role",
        "longname": "<anonymous>~role",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n   * The position of the member's highest role.\n   * @readonly\n   * @type {Number}\n   * @public\n   */",
        "meta": {
            "range": [
                7737,
                7993
            ],
            "filename": "Member.js",
            "lineno": 300,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000804",
                "name": "Member#highestRolePosition",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "The position of the member's highest role.",
        "readonly": true,
        "type": {
            "names": [
                "Number"
            ]
        },
        "access": "public",
        "name": "highestRolePosition",
        "longname": "Member#highestRolePosition",
        "kind": "member",
        "memberof": "Member",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7773,
                7792
            ],
            "filename": "Member.js",
            "lineno": 301,
            "columnno": 8,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000809",
                "name": "highestPosition",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "highestPosition",
        "longname": "<anonymous>~highestPosition",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7805,
                7823
            ],
            "filename": "Member.js",
            "lineno": 303,
            "columnno": 10,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000813",
                "name": "roles",
                "type": "MemberExpression",
                "value": "this.roles"
            }
        },
        "undocumented": true,
        "name": "roles",
        "longname": "<anonymous>~roles",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7839,
                7844
            ],
            "filename": "Member.js",
            "lineno": 305,
            "columnno": 13,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000820",
                "name": "i",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "<anonymous>~i",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7924,
                7959
            ],
            "filename": "Member.js",
            "lineno": 307,
            "columnno": 8,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000839",
                "name": "highestPosition",
                "type": "MemberExpression",
                "funcscope": "<anonymous>",
                "value": "roles[undefined].position",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "highestPosition",
        "longname": "<anonymous>~highestPosition",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n   * The overall calculated permissions for this member.\n   * @readonly\n   * @type {BigInt}\n   * @public\n   */",
        "meta": {
            "range": [
                8114,
                8258
            ],
            "filename": "Member.js",
            "lineno": 318,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000848",
                "name": "Member#permissions",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "The overall calculated permissions for this member.",
        "readonly": true,
        "type": {
            "names": [
                "BigInt"
            ]
        },
        "access": "public",
        "name": "permissions",
        "longname": "Member#permissions",
        "kind": "member",
        "memberof": "Member",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n   * Whether the member has joined the guild before.\n   * @readonly\n   * @type {Boolean}\n   * @public\n   */",
        "meta": {
            "range": [
                8376,
                8475
            ],
            "filename": "Member.js",
            "lineno": 330,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000872",
                "name": "Member#rejoined",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Whether the member has joined the guild before.",
        "readonly": true,
        "type": {
            "names": [
                "Boolean"
            ]
        },
        "access": "public",
        "name": "rejoined",
        "longname": "Member#rejoined",
        "kind": "member",
        "memberof": "Member",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n   * The user object for this member.\n   * @type {User}\n   * @readonly\n   * @public\n   */",
        "meta": {
            "range": [
                8575,
                8614
            ],
            "filename": "Member.js",
            "lineno": 340,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000889",
                "name": "Member#user",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "The user object for this member.",
        "type": {
            "names": [
                "User"
            ]
        },
        "readonly": true,
        "access": "public",
        "name": "user",
        "longname": "Member#user",
        "kind": "member",
        "memberof": "Member",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n   * The hash of the member's avatar, as it was received from Discord.\n   * @readonly\n   * @type {String?}\n   * @public\n   */",
        "meta": {
            "range": [
                8750,
                8939
            ],
            "filename": "Member.js",
            "lineno": 350,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000898",
                "name": "Member#_originalAvatarHash",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "The hash of the member's avatar, as it was received from Discord.",
        "readonly": true,
        "type": {
            "names": [
                "String"
            ]
        },
        "nullable": true,
        "access": "public",
        "name": "_originalAvatarHash",
        "longname": "Member#_originalAvatarHash",
        "kind": "member",
        "memberof": "Member",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9130,
                9172
            ],
            "filename": "Member.js",
            "lineno": 366,
            "columnno": 8,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000937",
                "name": "formattedHash",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "formattedHash",
        "longname": "<anonymous>~formattedHash",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9261,
                9296
            ],
            "filename": "Member.js",
            "lineno": 370,
            "columnno": 6,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000954",
                "name": "formattedHash",
                "type": "TemplateLiteral",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "formattedHash",
        "longname": "<anonymous>~formattedHash",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n   * The url of the member's avatar.\n   * @readonly\n   * @type {String}\n   * @public\n   */",
        "meta": {
            "range": [
                9429,
                9588
            ],
            "filename": "Member.js",
            "lineno": 381,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000962",
                "name": "Member#displayAvatarURL",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "The url of the member's avatar.",
        "readonly": true,
        "type": {
            "names": [
                "String"
            ]
        },
        "access": "public",
        "name": "displayAvatarURL",
        "longname": "Member#displayAvatarURL",
        "kind": "member",
        "memberof": "Member",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n   * The url of the member's avatar without falling back to the user's avatar.\n   * @readonly\n   * @type {String}\n   * @public\n   */",
        "meta": {
            "range": [
                9731,
                9850
            ],
            "filename": "Member.js",
            "lineno": 394,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100000986",
                "name": "Member#displayAvatarURLNoFallback",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "The url of the member's avatar without falling back to the user's avatar.",
        "readonly": true,
        "type": {
            "names": [
                "String"
            ]
        },
        "access": "public",
        "name": "displayAvatarURLNoFallback",
        "longname": "Member#displayAvatarURLNoFallback",
        "kind": "member",
        "memberof": "Member",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n   * Whether the user has not yet passed the guild's membership screening requirements.\n   * @readonly\n   * @type {Boolean}\n   * @public\n   */",
        "meta": {
            "range": [
                10003,
                10079
            ],
            "filename": "Member.js",
            "lineno": 404,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001004",
                "name": "Member#pending",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Whether the user has not yet passed the guild's membership screening requirements.",
        "readonly": true,
        "type": {
            "names": [
                "Boolean"
            ]
        },
        "access": "public",
        "name": "pending",
        "longname": "Member#pending",
        "kind": "member",
        "memberof": "Member",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n   * Whether the user has an animated avatar or not.\n   * @readonly\n   * @type {Boolean}\n   * @public\n   */",
        "meta": {
            "range": [
                10197,
                10282
            ],
            "filename": "Member.js",
            "lineno": 414,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001021",
                "name": "Member#avatarIsAnimated",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Whether the user has an animated avatar or not.",
        "readonly": true,
        "type": {
            "names": [
                "Boolean"
            ]
        },
        "access": "public",
        "name": "avatarIsAnimated",
        "longname": "Member#avatarIsAnimated",
        "kind": "member",
        "memberof": "Member",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n   * The mention string for the member.\n   * @type {String}\n   * @readonly\n   * @public\n   */",
        "meta": {
            "range": [
                10386,
                10444
            ],
            "filename": "Member.js",
            "lineno": 424,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001038",
                "name": "Member#mention",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "The mention string for the member.",
        "type": {
            "names": [
                "String"
            ]
        },
        "readonly": true,
        "access": "public",
        "name": "mention",
        "longname": "Member#mention",
        "kind": "member",
        "memberof": "Member",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n   * The hash name for the member.\n   * @type {String}\n   * @readonly\n   * @public\n   */",
        "meta": {
            "range": [
                10543,
                10617
            ],
            "filename": "Member.js",
            "lineno": 434,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001050",
                "name": "Member#hashName",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "The hash name for the member.",
        "type": {
            "names": [
                "String"
            ]
        },
        "readonly": true,
        "access": "public",
        "name": "hashName",
        "longname": "Member#hashName",
        "kind": "member",
        "memberof": "Member",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n   * Returns the mention string for the member.\n   * @param {String} userId The id of the user to mention.\n   * @returns {String}\n   * @public\n   * @static\n   * @method\n   */",
        "meta": {
            "range": [
                10802,
                10959
            ],
            "filename": "Member.js",
            "lineno": 446,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001065",
                "name": "Member.getMention",
                "type": "MethodDefinition",
                "paramnames": [
                    "userId"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the mention string for the member.",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "The id of the user to mention.",
                "name": "userId"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                }
            }
        ],
        "access": "public",
        "scope": "static",
        "kind": "function",
        "name": "getMention",
        "longname": "Member.getMention",
        "memberof": "Member"
    },
    {
        "comment": "/**\n   * Returns the avatar url for the member.\n   * @param {String} id The id of the user.\n   * @param {String} guild_id The id of the guild the user belongs to.\n   * @param {String?} hash The avatar hash of the user.\n   * @returns {String}\n   * @public\n   * @static\n   * @method\n   */",
        "meta": {
            "range": [
                11252,
                11773
            ],
            "filename": "Member.js",
            "lineno": 462,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001084",
                "name": "Member.getAvatarUrl",
                "type": "MethodDefinition",
                "paramnames": [
                    "id",
                    "guildId",
                    "hash"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the avatar url for the member.",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "The id of the user.",
                "name": "id"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "The id of the guild the user belongs to.",
                "name": "guild_id"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "nullable": true,
                "description": "The avatar hash of the user.",
                "name": "hash"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                }
            }
        ],
        "access": "public",
        "scope": "static",
        "kind": "function",
        "name": "getAvatarUrl",
        "longname": "Member.getAvatarUrl",
        "memberof": "Member"
    },
    {
        "comment": "/**\n   * Adds a role to the member.\n   * @param {String} role_id The id of the role to add to the member.\n   * @param {Object?} options The options for adding the role to the member.\n   * @param {String?} options.reason The reason for adding the role to the member.\n   * @returns {Promise<void>}\n   * @public\n   * @async\n   * @method\n   * @throws {TypeError | Error}\n   */",
        "meta": {
            "range": [
                12152,
                12293
            ],
            "filename": "Member.js",
            "lineno": 487,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001143",
                "name": "Member#addRole",
                "type": "MethodDefinition",
                "paramnames": [
                    "role_id",
                    ""
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Adds a role to the member.",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "The id of the role to add to the member.",
                "name": "role_id"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "nullable": true,
                "description": "The options for adding the role to the member.",
                "name": "options"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "nullable": true,
                "description": "The reason for adding the role to the member.",
                "name": "options.reason"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<void>"
                    ]
                }
            }
        ],
        "access": "public",
        "async": true,
        "kind": "function",
        "exceptions": [
            {
                "type": {
                    "names": [
                        "TypeError",
                        "Error"
                    ]
                }
            }
        ],
        "name": "addRole",
        "longname": "Member#addRole",
        "memberof": "Member",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12177,
                12183
            ],
            "filename": "Member.js",
            "lineno": 487,
            "columnno": 27,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001149",
                "name": "reason",
                "type": "Identifier",
                "value": "reason"
            }
        },
        "undocumented": true,
        "name": "reason",
        "longname": "reason",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12274,
                12280
            ],
            "filename": "Member.js",
            "lineno": 489,
            "columnno": 6,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001171",
                "name": "reason",
                "type": "Identifier",
                "value": "reason"
            }
        },
        "undocumented": true,
        "name": "reason",
        "longname": "reason",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n   * Removes a role from the member.\n   * @param {String} role_id The id of the role to remove from the member.\n   * @param {Object?} options The options for removing the role from the member.\n   * @param {String?} options.reason The reason for removing the role from the member.\n   * @returns {Promise<void>}\n   * @public\n   * @async\n   * @method\n   * @throws {TypeError | Error}\n   */",
        "meta": {
            "range": [
                12690,
                12837
            ],
            "filename": "Member.js",
            "lineno": 504,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001173",
                "name": "Member#removeRole",
                "type": "MethodDefinition",
                "paramnames": [
                    "role_id",
                    ""
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Removes a role from the member.",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "The id of the role to remove from the member.",
                "name": "role_id"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "nullable": true,
                "description": "The options for removing the role from the member.",
                "name": "options"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "nullable": true,
                "description": "The reason for removing the role from the member.",
                "name": "options.reason"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<void>"
                    ]
                }
            }
        ],
        "access": "public",
        "async": true,
        "kind": "function",
        "exceptions": [
            {
                "type": {
                    "names": [
                        "TypeError",
                        "Error"
                    ]
                }
            }
        ],
        "name": "removeRole",
        "longname": "Member#removeRole",
        "memberof": "Member",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12718,
                12724
            ],
            "filename": "Member.js",
            "lineno": 504,
            "columnno": 30,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001179",
                "name": "reason",
                "type": "Identifier",
                "value": "reason"
            }
        },
        "undocumented": true,
        "name": "reason",
        "longname": "reason",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12818,
                12824
            ],
            "filename": "Member.js",
            "lineno": 506,
            "columnno": 6,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001201",
                "name": "reason",
                "type": "Identifier",
                "value": "reason"
            }
        },
        "undocumented": true,
        "name": "reason",
        "longname": "reason",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n   * Adds a timeout to the member.\n   * @param {Number} timeout_until The UNIX timestamp for when the member's timeout should end.\n   * @param {Object?} options The options for timing out the member.\n   * @param {String?} options.reason The reason for timing out the member.\n   * @returns {Promise<void>}\n   * @public\n   * @async\n   * @method\n   * @throws {TypeError | Error}\n   */",
        "meta": {
            "range": [
                13229,
                13984
            ],
            "filename": "Member.js",
            "lineno": 521,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001203",
                "name": "Member#timeoutAdd",
                "type": "MethodDefinition",
                "paramnames": [
                    "timeout_until",
                    ""
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Adds a timeout to the member.",
        "params": [
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "description": "The UNIX timestamp for when the member's timeout should end.",
                "name": "timeout_until"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "nullable": true,
                "description": "The options for timing out the member.",
                "name": "options"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "nullable": true,
                "description": "The reason for timing out the member.",
                "name": "options.reason"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<void>"
                    ]
                }
            }
        ],
        "access": "public",
        "async": true,
        "kind": "function",
        "exceptions": [
            {
                "type": {
                    "names": [
                        "TypeError",
                        "Error"
                    ]
                }
            }
        ],
        "name": "timeoutAdd",
        "longname": "Member#timeoutAdd",
        "memberof": "Member",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13263,
                13269
            ],
            "filename": "Member.js",
            "lineno": 521,
            "columnno": 36,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001209",
                "name": "reason",
                "type": "Identifier",
                "value": "reason"
            }
        },
        "undocumented": true,
        "name": "reason",
        "longname": "reason",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13738,
                13747
            ],
            "filename": "Member.js",
            "lineno": 536,
            "columnno": 10,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001257",
                "name": "body",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "body",
        "longname": "<anonymous>~body",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13766,
                13801
            ],
            "filename": "Member.js",
            "lineno": 538,
            "columnno": 16,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001263",
                "name": "body[\"X-Audit-Log-Reason\"]",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "reason",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "\"X-Audit-Log-Reason\"]",
        "longname": "<anonymous>~body.\"X-Audit-Log-Reason\"]",
        "kind": "member",
        "memberof": "<anonymous>~body",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13808,
                13857
            ],
            "filename": "Member.js",
            "lineno": 540,
            "columnno": 4,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001269",
                "name": "body.communication_disabled_until",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "timeout_until",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "communication_disabled_until",
        "longname": "<anonymous>~body.communication_disabled_until",
        "kind": "member",
        "memberof": "<anonymous>~body",
        "scope": "static"
    },
    {
        "comment": "/**\n   * Removes a timeout from the member.\n   * @param {Object?} options The options for untiming out the member.\n   * @param {String?} options.reason The reason for removing the time out from the member.\n   * @returns {Promise<void>}\n   * @public\n   * @async\n   * @method\n   * @throws {TypeError | Error}\n   */",
        "meta": {
            "range": [
                14303,
                14916
            ],
            "filename": "Member.js",
            "lineno": 559,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001294",
                "name": "Member#timeoutRemove",
                "type": "MethodDefinition",
                "paramnames": [
                    ""
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Removes a timeout from the member.",
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "nullable": true,
                "description": "The options for untiming out the member.",
                "name": "options"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "nullable": true,
                "description": "The reason for removing the time out from the member.",
                "name": "options.reason"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<void>"
                    ]
                }
            }
        ],
        "access": "public",
        "async": true,
        "kind": "function",
        "exceptions": [
            {
                "type": {
                    "names": [
                        "TypeError",
                        "Error"
                    ]
                }
            }
        ],
        "name": "timeoutRemove",
        "longname": "Member#timeoutRemove",
        "memberof": "Member",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14325,
                14331
            ],
            "filename": "Member.js",
            "lineno": 559,
            "columnno": 24,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001299",
                "name": "reason",
                "type": "Identifier",
                "value": "reason"
            }
        },
        "undocumented": true,
        "name": "reason",
        "longname": "reason",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14679,
                14688
            ],
            "filename": "Member.js",
            "lineno": 571,
            "columnno": 10,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001338",
                "name": "body",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "body",
        "longname": "<anonymous>~body",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14707,
                14742
            ],
            "filename": "Member.js",
            "lineno": 573,
            "columnno": 16,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001344",
                "name": "body[\"X-Audit-Log-Reason\"]",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "reason",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "\"X-Audit-Log-Reason\"]",
        "longname": "<anonymous>~body.\"X-Audit-Log-Reason\"]",
        "kind": "member",
        "memberof": "<anonymous>~body",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14749,
                14789
            ],
            "filename": "Member.js",
            "lineno": 575,
            "columnno": 4,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001350",
                "name": "body.communication_disabled_until",
                "type": "Literal",
                "funcscope": "<anonymous>",
                "value": null,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "communication_disabled_until",
        "longname": "<anonymous>~body.communication_disabled_until",
        "kind": "member",
        "memberof": "<anonymous>~body",
        "scope": "static"
    },
    {
        "comment": "/**\n   * Updates the member's roles.\n   * @param {Array<String>} roles An array of role ids for the roles the member should be updated with.\n   * @param {Object?} options The options for updating the member's roles.\n   * @returns {Promise<void>}\n   * @public\n   * @async\n   * @method\n   * @throws {TypeError | Error}\n   */",
        "meta": {
            "range": [
                15245,
                16043
            ],
            "filename": "Member.js",
            "lineno": 594,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001375",
                "name": "Member#massUpdateRoles",
                "type": "MethodDefinition",
                "paramnames": [
                    "roles",
                    ""
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Updates the member's roles.",
        "params": [
            {
                "type": {
                    "names": [
                        "Array.<String>"
                    ]
                },
                "description": "An array of role ids for the roles the member should be updated with.",
                "name": "roles"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "nullable": true,
                "description": "The options for updating the member's roles.",
                "name": "options"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<void>"
                    ]
                }
            }
        ],
        "access": "public",
        "async": true,
        "kind": "function",
        "exceptions": [
            {
                "type": {
                    "names": [
                        "TypeError",
                        "Error"
                    ]
                }
            }
        ],
        "name": "massUpdateRoles",
        "longname": "Member#massUpdateRoles",
        "memberof": "Member",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15276,
                15282
            ],
            "filename": "Member.js",
            "lineno": 594,
            "columnno": 33,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001381",
                "name": "reason",
                "type": "Identifier",
                "value": "reason"
            }
        },
        "undocumented": true,
        "name": "reason",
        "longname": "reason",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15797,
                15806
            ],
            "filename": "Member.js",
            "lineno": 612,
            "columnno": 10,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001443",
                "name": "body",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "body",
        "longname": "<anonymous>~body",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15825,
                15860
            ],
            "filename": "Member.js",
            "lineno": 614,
            "columnno": 16,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001449",
                "name": "body[\"X-Audit-Log-Reason\"]",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "reason",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "\"X-Audit-Log-Reason\"]",
        "longname": "<anonymous>~body.\"X-Audit-Log-Reason\"]",
        "kind": "member",
        "memberof": "<anonymous>~body",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15867,
                15916
            ],
            "filename": "Member.js",
            "lineno": 616,
            "columnno": 4,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001455",
                "name": "body.roles",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "roles",
        "longname": "<anonymous>~body.roles",
        "kind": "member",
        "memberof": "<anonymous>~body",
        "scope": "static"
    },
    {
        "comment": "/**\n   * Determines whether the member should be cached.\n   * @param {GluonCacheOptions} gluonCacheOptions The cache options for the client.\n   * @param {GuildCacheOptions} guildCacheOptions The cache options for the guild.\n   * @returns {Boolean}\n   * @public\n   * @static\n   * @method\n   */",
        "meta": {
            "range": [
                16342,
                16874
            ],
            "filename": "Member.js",
            "lineno": 634,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001489",
                "name": "Member.shouldCache",
                "type": "MethodDefinition",
                "paramnames": [
                    "gluonCacheOptions",
                    "guildCacheOptions"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Determines whether the member should be cached.",
        "params": [
            {
                "type": {
                    "names": [
                        "GluonCacheOptions"
                    ]
                },
                "description": "The cache options for the client.",
                "name": "gluonCacheOptions"
            },
            {
                "type": {
                    "names": [
                        "GuildCacheOptions"
                    ]
                },
                "description": "The cache options for the guild.",
                "name": "guildCacheOptions"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                }
            }
        ],
        "access": "public",
        "scope": "static",
        "kind": "function",
        "name": "shouldCache",
        "longname": "Member.shouldCache",
        "memberof": "Member"
    },
    {
        "comment": "/**\n   * Returns the hash name for the message.\n   * @param {String} guildId The id of the guild that the message belongs to.\n   * @param {String} memberId The id of the member.\n   * @returns {String}\n   */",
        "meta": {
            "range": [
                17087,
                17383
            ],
            "filename": "Member.js",
            "lineno": 654,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001531",
                "name": "Member.getHashName",
                "type": "MethodDefinition",
                "paramnames": [
                    "guildId",
                    "memberId"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the hash name for the message.",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "The id of the guild that the message belongs to.",
                "name": "guildId"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "The id of the member.",
                "name": "memberId"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                }
            }
        ],
        "name": "getHashName",
        "longname": "Member.getHashName",
        "kind": "function",
        "memberof": "Member",
        "scope": "static"
    },
    {
        "comment": "/**\n   * Decrypts a member.\n   * @param {Client} client The client instance.\n   * @param {String} data The encrypted message data.\n   * @param {String} guildId The id of the guild that the message belongs to.\n   * @param {String} userId The id of the member.\n   * @returns {Member}\n   */",
        "meta": {
            "range": [
                17677,
                18257
            ],
            "filename": "Member.js",
            "lineno": 670,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001560",
                "name": "Member.decrypt",
                "type": "MethodDefinition",
                "paramnames": [
                    "client",
                    "data",
                    "guildId",
                    "userId"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Decrypts a member.",
        "params": [
            {
                "type": {
                    "names": [
                        "Client"
                    ]
                },
                "description": "The client instance.",
                "name": "client"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "The encrypted message data.",
                "name": "data"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "The id of the guild that the message belongs to.",
                "name": "guildId"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "The id of the member.",
                "name": "userId"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Member"
                    ]
                }
            }
        ],
        "name": "decrypt",
        "longname": "Member.decrypt",
        "kind": "function",
        "memberof": "Member",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18206,
                18220
            ],
            "filename": "Member.js",
            "lineno": 680,
            "columnno": 6,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001614",
                "name": "userId",
                "type": "Identifier",
                "value": "userId"
            }
        },
        "undocumented": true,
        "name": "userId",
        "longname": "userId",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18228,
                18244
            ],
            "filename": "Member.js",
            "lineno": 681,
            "columnno": 6,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001616",
                "name": "guildId",
                "type": "Identifier",
                "value": "guildId"
            }
        },
        "undocumented": true,
        "name": "guildId",
        "longname": "guildId",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n   * Adds a role to a member.\n   * @param {Client} client The client instance.\n   * @param {String} guildId The guild id the member belongs to.\n   * @param {String} userId The id of the member who the action is occuring on.\n   * @param {String} roleId The id of the role to add.\n   * @param {Object} options The options for adding the role.\n   * @param {String} options.reason The reason for adding the role.\n   * @returns {Promise<void>}\n   * @public\n   * @method\n   * @async\n   * @throws {TypeError}\n   */",
        "meta": {
            "range": [
                18775,
                19690
            ],
            "filename": "Member.js",
            "lineno": 699,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001618",
                "name": "Member.addRole",
                "type": "MethodDefinition",
                "paramnames": [
                    "client",
                    "guildId",
                    "userId",
                    "roleId",
                    ""
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Adds a role to a member.",
        "params": [
            {
                "type": {
                    "names": [
                        "Client"
                    ]
                },
                "description": "The client instance.",
                "name": "client"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "The guild id the member belongs to.",
                "name": "guildId"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "The id of the member who the action is occuring on.",
                "name": "userId"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "The id of the role to add.",
                "name": "roleId"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The options for adding the role.",
                "name": "options"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "The reason for adding the role.",
                "name": "options.reason"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<void>"
                    ]
                }
            }
        ],
        "access": "public",
        "kind": "function",
        "async": true,
        "exceptions": [
            {
                "type": {
                    "names": [
                        "TypeError"
                    ]
                }
            }
        ],
        "name": "addRole",
        "longname": "Member.addRole",
        "memberof": "Member",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18831,
                18837
            ],
            "filename": "Member.js",
            "lineno": 699,
            "columnno": 58,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001627",
                "name": "reason",
                "type": "Identifier",
                "value": "reason"
            }
        },
        "undocumented": true,
        "name": "reason",
        "longname": "reason",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19500,
                19509
            ],
            "filename": "Member.js",
            "lineno": 717,
            "columnno": 10,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001696",
                "name": "body",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "body",
        "longname": "<anonymous>~body",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19528,
                19563
            ],
            "filename": "Member.js",
            "lineno": 719,
            "columnno": 16,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001702",
                "name": "body[\"X-Audit-Log-Reason\"]",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "reason",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "\"X-Audit-Log-Reason\"]",
        "longname": "<anonymous>~body.\"X-Audit-Log-Reason\"]",
        "kind": "member",
        "memberof": "<anonymous>~body",
        "scope": "static"
    },
    {
        "comment": "/**\n   * Removes a role from a member.\n   * @param {Client} client The client instance.\n   * @param {String} guildId The guild id the member belongs to.\n   * @param {String} userId The id of the member who the action is occuring on.\n   * @param {String} roleId The id of the role to remove.\n   * @param {Object} options The options for removing the role.\n   * @param {String} options.reason The reason for removing the role.\n   * @returns {Promise<void>}\n   * @public\n   * @method\n   * @async\n   * @throws {TypeError}\n   */",
        "meta": {
            "range": [
                20220,
                21139
            ],
            "filename": "Member.js",
            "lineno": 742,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001721",
                "name": "Member.removeRole",
                "type": "MethodDefinition",
                "paramnames": [
                    "client",
                    "guildId",
                    "userId",
                    "roleId",
                    ""
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Removes a role from a member.",
        "params": [
            {
                "type": {
                    "names": [
                        "Client"
                    ]
                },
                "description": "The client instance.",
                "name": "client"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "The guild id the member belongs to.",
                "name": "guildId"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "The id of the member who the action is occuring on.",
                "name": "userId"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "The id of the role to remove.",
                "name": "roleId"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The options for removing the role.",
                "name": "options"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "The reason for removing the role.",
                "name": "options.reason"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<void>"
                    ]
                }
            }
        ],
        "access": "public",
        "kind": "function",
        "async": true,
        "exceptions": [
            {
                "type": {
                    "names": [
                        "TypeError"
                    ]
                }
            }
        ],
        "name": "removeRole",
        "longname": "Member.removeRole",
        "memberof": "Member",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20279,
                20285
            ],
            "filename": "Member.js",
            "lineno": 742,
            "columnno": 61,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001730",
                "name": "reason",
                "type": "Identifier",
                "value": "reason"
            }
        },
        "undocumented": true,
        "name": "reason",
        "longname": "reason",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20948,
                20957
            ],
            "filename": "Member.js",
            "lineno": 760,
            "columnno": 10,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001799",
                "name": "body",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "body",
        "longname": "<anonymous>~body",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20976,
                21011
            ],
            "filename": "Member.js",
            "lineno": 762,
            "columnno": 16,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001805",
                "name": "body[\"X-Audit-Log-Reason\"]",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "reason",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "\"X-Audit-Log-Reason\"]",
        "longname": "<anonymous>~body.\"X-Audit-Log-Reason\"]",
        "kind": "member",
        "memberof": "<anonymous>~body",
        "scope": "static"
    },
    {
        "comment": "/**\n   * Encrypts the member.\n   * @returns {String}\n   * @public\n   * @method\n   */",
        "meta": {
            "range": [
                21230,
                21303
            ],
            "filename": "Member.js",
            "lineno": 777,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001824",
                "name": "Member#encrypt",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Encrypts the member.",
        "returns": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                }
            }
        ],
        "access": "public",
        "kind": "function",
        "name": "encrypt",
        "longname": "Member#encrypt",
        "memberof": "Member",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n   * @method\n   * @public\n   */",
        "meta": {
            "range": [
                21345,
                21396
            ],
            "filename": "Member.js",
            "lineno": 785,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001838",
                "name": "Member#toString",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "kind": "function",
        "access": "public",
        "name": "toString",
        "longname": "Member#toString",
        "memberof": "Member",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n   * @method\n   * @public\n   */",
        "meta": {
            "range": [
                21438,
                21495
            ],
            "filename": "Member.js",
            "lineno": 793,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001849",
                "name": "Member#util.inspect.custom",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "kind": "function",
        "access": "public",
        "name": "custom",
        "longname": "Member#util.inspect.custom",
        "memberof": "Member#util.inspect",
        "scope": "static",
        "params": []
    },
    {
        "comment": "/**\n   * Returns the JSON representation of this structure.\n   * @param {Number} format The format to return the data in.\n   * @returns {Object}\n   * @public\n   * @method\n   */",
        "meta": {
            "range": [
                21678,
                23234
            ],
            "filename": "Member.js",
            "lineno": 804,
            "columnno": 2,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001862",
                "name": "Member#toJSON",
                "type": "MethodDefinition",
                "paramnames": [
                    "format"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the JSON representation of this structure.",
        "params": [
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "description": "The format to return the data in.",
                "name": "format"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                }
            }
        ],
        "access": "public",
        "kind": "function",
        "name": "toJSON",
        "longname": "Member#toJSON",
        "memberof": "Member",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21836,
                21866
            ],
            "filename": "Member.js",
            "lineno": 809,
            "columnno": 10,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001880",
                "name": "user",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "user",
        "longname": "user",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21878,
                21893
            ],
            "filename": "Member.js",
            "lineno": 810,
            "columnno": 10,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001888",
                "name": "nick",
                "type": "MemberExpression",
                "value": "this.nick"
            }
        },
        "undocumented": true,
        "name": "nick",
        "longname": "nick",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21905,
                21964
            ],
            "filename": "Member.js",
            "lineno": 811,
            "columnno": 10,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001892",
                "name": "joined_at",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "joined_at",
        "longname": "joined_at",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21976,
                22008
            ],
            "filename": "Member.js",
            "lineno": 812,
            "columnno": 10,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001903",
                "name": "avatar",
                "type": "MemberExpression",
                "value": "this._originalAvatarHash"
            }
        },
        "undocumented": true,
        "name": "avatar",
        "longname": "avatar",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22020,
                22057
            ],
            "filename": "Member.js",
            "lineno": 813,
            "columnno": 10,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001907",
                "name": "permissions",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "permissions",
        "longname": "permissions",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22069,
                22252
            ],
            "filename": "Member.js",
            "lineno": 814,
            "columnno": 10,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001913",
                "name": "roles",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "roles",
        "longname": "roles",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22264,
                22374
            ],
            "filename": "Member.js",
            "lineno": 819,
            "columnno": 10,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001948",
                "name": "communication_disabled_until",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "communication_disabled_until",
        "longname": "communication_disabled_until",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22386,
                22403
            ],
            "filename": "Member.js",
            "lineno": 822,
            "columnno": 10,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001959",
                "name": "flags",
                "type": "MemberExpression",
                "value": "this.flags"
            }
        },
        "undocumented": true,
        "name": "flags",
        "longname": "flags",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22415,
                22445
            ],
            "filename": "Member.js",
            "lineno": 823,
            "columnno": 10,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001963",
                "name": "_attributes",
                "type": "MemberExpression",
                "value": "this."
            }
        },
        "undocumented": true,
        "name": "_attributes",
        "longname": "_attributes",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22556,
                22586
            ],
            "filename": "Member.js",
            "lineno": 829,
            "columnno": 10,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001976",
                "name": "user",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "user",
        "longname": "user",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22598,
                22613
            ],
            "filename": "Member.js",
            "lineno": 830,
            "columnno": 10,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001984",
                "name": "nick",
                "type": "MemberExpression",
                "value": "this.nick"
            }
        },
        "undocumented": true,
        "name": "nick",
        "longname": "nick",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22625,
                22732
            ],
            "filename": "Member.js",
            "lineno": 831,
            "columnno": 10,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100001988",
                "name": "joined_at",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "joined_at",
        "longname": "joined_at",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22744,
                22776
            ],
            "filename": "Member.js",
            "lineno": 834,
            "columnno": 10,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100002004",
                "name": "avatar",
                "type": "MemberExpression",
                "value": "this._originalAvatarHash"
            }
        },
        "undocumented": true,
        "name": "avatar",
        "longname": "avatar",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22788,
                22825
            ],
            "filename": "Member.js",
            "lineno": 835,
            "columnno": 10,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100002008",
                "name": "permissions",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "permissions",
        "longname": "permissions",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22837,
                23020
            ],
            "filename": "Member.js",
            "lineno": 836,
            "columnno": 10,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100002014",
                "name": "roles",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "roles",
        "longname": "roles",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23032,
                23142
            ],
            "filename": "Member.js",
            "lineno": 841,
            "columnno": 10,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100002049",
                "name": "communication_disabled_until",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "communication_disabled_until",
        "longname": "communication_disabled_until",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23154,
                23171
            ],
            "filename": "Member.js",
            "lineno": 844,
            "columnno": 10,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100002060",
                "name": "flags",
                "type": "MemberExpression",
                "value": "this.flags"
            }
        },
        "undocumented": true,
        "name": "flags",
        "longname": "flags",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23183,
                23204
            ],
            "filename": "Member.js",
            "lineno": 845,
            "columnno": 10,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100002064",
                "name": "pending",
                "type": "MemberExpression",
                "value": "this.pending"
            }
        },
        "undocumented": true,
        "name": "pending",
        "longname": "pending",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23238,
                23260
            ],
            "filename": "Member.js",
            "lineno": 852,
            "columnno": 0,
            "path": "/home/runner/work/gluon/gluon/src/structures",
            "code": {
                "id": "astnode100002068",
                "name": "module.exports",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "kind": "package",
        "longname": "package:undefined",
        "files": [
            "/home/runner/work/gluon/gluon/src/structures/Member.js"
        ]
    }
]
